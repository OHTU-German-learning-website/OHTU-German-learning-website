--Table for all exercises regardless of type
CREATE TABLE exercises (
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE TRIGGER updated_at
BEFORE UPDATE
ON public.exercises
FOR EACH ROW
EXECUTE FUNCTION updated_at();

--Table for drag and drop -type exercises, categories should reference table dnd_categories?
CREATE TABLE dnd_exercises(
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    title TEXT NOT NULL,
    categories TEXT [] NOT NULL,
    draggable_words TEXT [] NOT NULL,
    all_words TEXT [] NOT NULL,
    UNIQUE (all_words, draggable_words),
    UNIQUE (id, draggable_words)
);

CREATE TRIGGER updated_at
BEFORE UPDATE
ON public.dnd_exercises
FOR EACH ROW
EXECUTE FUNCTION updated_at();

--Table for dustbin categories
CREATE TABLE dnd_categories (
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    category TEXT NOT NULL,
    color TEXT NOT NULL,
);

CREATE TRIGGER updated_at
BEFORE UPDATE
ON public.dnd_categories
FOR EACH ROW
EXECUTE FUNCTION updated_at();

-- Table holding all the possible words user can drag and drop and the correct answers
CREATE TABLE draggable_words (
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    word TEXT NOT NULL,
    correct_answer TEXT NOT NULL,
    UNIQUE (word, correct_answer),
    UNIQUE (id, correct_answer)
);

CREATE TRIGGER updated_at
BEFORE UPDATE
ON public.draggable_words
FOR EACH ROW
EXECUTE FUNCTION updated_at();

-- Table holding the user's answers
CREATE TABLE user_answers (
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    draggable_words_id BIGINT NOT NULL REFERENCES draggable_words(id) ON DELETE CASCADE,
    answer TEXT NOT NULL,
    correct_answer TEXT NOT NULL,
    is_correct BOOLEAN NOT NULL GENERATED ALWAYS AS (answer = correct_answer) STORED,
    FOREIGN KEY (draggable_words_id, correct_answer) REFERENCES draggable_words(id, correct_answer) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TRIGGER updated_at
BEFORE UPDATE
ON public.user_answers
FOR EACH ROW
EXECUTE FUNCTION updated_at();

-- Table that joins the correct answer table and exercise table, do we need this?
CREATE TABLE words_to_exercises (
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    word_id bigint,
    exercise_id bigint,
    FOREIGN KEY (word_id) REFERENCES draggable_words(id),
    FOREIGN KEY (exercise_id) REFERENCES exercises(id)
);

CREATE TRIGGER updated_at
BEFORE UPDATE
ON public.words_to_exercises
FOR EACH ROW
EXECUTE FUNCTION updated_at();

-- Table connecting drag and drop -type exercises to the main exercise table
CREATE TABLE dnd_to_exercises (
    id bigint PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
    dnd_id bigint,
    exercise_id bigint,
    FOREIGN KEY (dnd_id) REFERENCES dnd_exercises(id),
    FOREIGN KEY (exercise_id) REFERENCES exercises(id)
);

CREATE TRIGGER updated_at
BEFORE UPDATE
ON public.dnd_to_exercises
FOR EACH ROW
EXECUTE FUNCTION updated_at();